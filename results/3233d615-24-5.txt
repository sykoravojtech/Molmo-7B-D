---
Human_Prompt: You are a specialised circuit-diagram interpreter. Given the image of an electrical circuit diagram, identify which symbol classes from the list below appear in the image. IMPORTANT RULES: - Only list symbols you can clearly see and identify in the image - Do not guess or assume symbols are present - If you're uncertain about a symbol, do not include it - Look for distinctive visual features of each symbol type - A typical simple circuit might only contain 2-5 different symbol types. List only the classes you find, in a python list, and nothing else. Symbol classes: ["terminal", "gnd", "vss", "voltage.dc", "voltage.ac", "voltage.battery", "resistor", "resistor.adjustable", "resistor.photo", "capacitor.unpolarized", "capacitor.polarized", "capacitor.adjustable", "inductor", "inductor.ferrite", "inductor.coupled", "transformer", "diode", "diode.light_emitting", "diode.thyrector", "diode.zener", "diac", "triac", "thyristor", "varistor", "transistor.bjt", "transistor.fet", "transistor.photo", "operational_amplifier", "operational_amplifier.schmitt_trigger", "optocoupler", "integrated_circuit", "integrated_circuit.ne555", "integrated_circuit.voltage_regulator", "xor", "and", "or", "not", "nand", "nor", "probe", "probe.current", "probe.voltage", "switch", "relay", "socket", "fuse", "speaker", "motor", "lamp", "microphone", "antenna", "crystal", "mechanical", "magnetic", "optical", "block"]
===
Model_Response:  ["terminal", "resistor", "capacitor.polarized", "diode.light_emitting", "integrated_circuit.voltage_regulator", "switch", "relay", "socket", "fuse", "speaker", "motor", "lamp", "microphone", "antenna", "crystal", "mechanical", "magnetic", "optical", "block"]
---
Human_Prompt: You are a specialised circuit-diagram interpreter performing zero-shot inference. Given the image of an electrical circuit diagram, identify all symbols of class "terminal". For each symbol from that class, output one <points> tag and nothing else, in the exact format: <points x1="…" y1="…" x2="…" y2="…" alt="terminal">terminal</points> Use the coordinates of the bounding polygon of each symbol. Do not include any additional text or tags.Example: <points x1="20.8" y1="42.4" x2="21.0" y2="53.6" alt="terminal">terminal</points>
===
Model_Response:  <points x1="20.8" y1="42.4" x2="21.0" y2="53.6" x3="28.5" y3="42.4" x4="28.7" y4="53.6" x5="36.4" y5="42.4" x6="36.6" y6="53.6" x7="44.3" y7="42.4" x8="44.5" y8="53.6" x9="56.5" y9="39.8" x10="56.7" y10="29.0" x11="64.2" y11="39.8" x12="64.4" y12="29.0" x13="67.0" y13="19.2" x14="67.2" y14="9.0" x15="74.5" y15="19.2" x16="74.7" y16="9.0" x17="81.9" y17="39.8" x18="82.1" y18="29.0" x19="89.7" y19="53.6" x20="90.1" y20="43.2" x21="90.3" y21="63.2" x22="90.5" y22="58.4" x23="97.7" y23="53.6" x24="97.9" y24="43.2" alt="terminal">terminal</points>
---
Human_Prompt: You are a specialised circuit-diagram interpreter performing zero-shot inference. Given the image of an electrical circuit diagram, identify all symbols of class "resistor". For each symbol from that class, output one <points> tag and nothing else, in the exact format: <points x1="…" y1="…" x2="…" y2="…" alt="resistor">resistor</points> Use the coordinates of the bounding polygon of each symbol. Do not include any additional text or tags.Example: <points x1="20.8" y1="42.4" x2="21.0" y2="53.6" alt="resistor">resistor</points>
===
Model_Response:  <points x1="20.8" y1="42.4" x2="21.0" y2="53.6" x3="28.9" y3="42.4" x4="29.1" y4="53.6" x5="37.5" y5="42.4" x6="37.7" y6="53.6" x7="45.4" y7="42.4" x8="45.6" y8="53.6" x9="55.8" y9="39.8" x10="56.0" y10="29.0" x11="63.4" y11="39.8" x12="63.6" y12="29.0" x13="71.0" y13="39.8" x14="71.2" y14="29.0" x15="79.0" y15="39.8" x16="79.2" y16="29.0" x17="86.8" y17="39.8" x18="86.9" y18="29.0" x19="95.3" y19="39.8" x20="95.4" y20="29.0" alt="resistor">resistor</points>
---
Human_Prompt: You are a specialised circuit-diagram interpreter performing zero-shot inference. Given the image of an electrical circuit diagram, identify all symbols of class "diode.light_emitting". For each symbol from that class, output one <points> tag and nothing else, in the exact format: <points x1="…" y1="…" x2="…" y2="…" alt="diode.light_emitting">diode.light_emitting</points> Use the coordinates of the bounding polygon of each symbol. Do not include any additional text or tags.Example: <points x1="20.8" y1="42.4" x2="21.0" y2="53.6" alt="diode.light_emitting">diode.light_emitting</points>
===
Model_Response:  <points x1="20.8" y1="42.4" x2="21.0" y2="53.6" x3="22.5" y3="39.6" x4="22.5" y4="50.4" x5="24.0" y5="42.4" x6="24.0" y6="53.6" x7="25.5" y7="39.6" x8="25.5" y8="50.4" x9="26.9" y9="42.4" x10="27.0" y10="53.6" x11="28.4" y11="39.6" x12="28.4" y12="50.4" x13="29.7" y13="42.4" x14="29.7" y14="53.6" x15="31.2" y15="39.6" x16="31.2" y16="50.4" x17="32.5" y17="42.4" x18="32.5" y18="53.6" x19="34.0" y19="39.6" x20="34.0" y20="50.4" x21="35.4" y21="42.4" x22="35.4" y22="53.6" x23="36.8" y23="39.6" x24="36.8" y24="50.4" x25="38.2" y25="42.4" x26="38.2" y26="53.6" x27="39.7" y27="39.6" x28="39.7" y28="50.4" x29="41.0" y29="42.4" x30="41.0" y30="53.6" x31="42.4" y31="39.6" x32="42.4" y32="50.4" x33="43.7" y33="42.4" x34="43.7" y34="53.6" x35="45.2" y35="39.6" x36="45.2" y36="50.4" x37="46.5" y37="42.4" x38="46.5" y38="53.6" x39="47.8" y39="39.6" x40="47.8" y40="50.4" alt="diode.light_emitting">diode.light_emitting</points>
---
