---
Human_Prompt: You are a specialised circuit-diagram interpreter. Given the image of an electrical circuit diagram, identify which symbol classes from the list below appear in the image. IMPORTANT RULES: - Only list symbols you can clearly see and identify in the image - Do not guess or assume symbols are present - If you're uncertain about a symbol, do not include it - Look for distinctive visual features of each symbol type - A typical simple circuit might only contain 2-5 different symbol types. List only the classes you find, in a python list, and nothing else. Symbol classes: ["terminal", "gnd", "vss", "voltage.dc", "voltage.ac", "voltage.battery", "resistor", "resistor.adjustable", "resistor.photo", "capacitor.unpolarized", "capacitor.polarized", "capacitor.adjustable", "inductor", "inductor.ferrite", "inductor.coupled", "transformer", "diode", "diode.light_emitting", "diode.thyrector", "diode.zener", "diac", "triac", "thyristor", "varistor", "transistor.bjt", "transistor.fet", "transistor.photo", "operational_amplifier", "operational_amplifier.schmitt_trigger", "optocoupler", "integrated_circuit", "integrated_circuit.ne555", "integrated_circuit.voltage_regulator", "xor", "and", "or", "not", "nand", "nor", "probe", "probe.current", "probe.voltage", "switch", "relay", "socket", "fuse", "speaker", "motor", "lamp", "microphone", "antenna", "crystal", "mechanical", "magnetic", "optical", "block"]
===
Model_Response:  ["terminal", "gnd", "resistor", "capacitor.polarized", "transistor.bjt", "integrated_circuit.voltage_regulator", "or", "switch", "socket", "fuse", "microphone", "antenna", "crystal", "mechanical", "magnetic", "optical", "block"]
---
Human_Prompt: You are a specialised circuit-diagram interpreter performing zero-shot inference. Given the image of an electrical circuit diagram, identify all symbols of class "terminal". For each symbol from that class, output one <points> tag and nothing else, in the exact format: <points x1="…" y1="…" x2="…" y2="…" alt="terminal">terminal</points> Use the coordinates of the bounding polygon of each symbol. Do not include any additional text or tags.Example: <points x1="20.8" y1="42.4" x2="21.0" y2="53.6" alt="terminal">terminal</points>
===
Model_Response:  <points x1="21.0" y1="53.6" x2="21.0" y2="63.8" x3="21.0" y3="83.3" x4="21.2" y4="42.4" x5="21.2" y5="68.5" x6="21.2" y6="83.3" x7="21.4" y7="53.6" x8="21.4" y8="63.8" x9="21.6" y9="42.4" x10="21.6" y10="63.8" x11="21.6" y11="83.3" x12="21.8" y12="53.6" x13="21.8" y13="68.5" x14="22.0" y14="42.4" x15="22.0" y15="63.8" x16="22.0" y16="83.3" x17="22.2" y17="53.6" x18="22.2" y18="68.5" x19="22.4" y19="42.4" x20="22.4" y20="63.8" x21="22.4" y21="83.3" x22="22.6" y22="53.6" x23="22.6" y23="68.5" x24="22.8" y24="42.4" x25="22.8" y25="63.8" x26="22.8" y26="83.3" x27="23.0" y27="53.6" x28="23.0" y28="68.5" x29="23.2" y29="42.4" x30="23.2" y30="63.8" x31="23.2" y31="83.3" x32="23.4" y32="53.6" x33="23.4" y33="68.5" x34="23.6" y34="42.4" x35="23.6" y35="63.8" x36="23.6" y36="83.3" x37="23.8" y37="53.6" x38="23.8" y38="68.5" x39="24.0" y39="42.4" x40="24.0" y40="63.8" x41="24.0" y41="83.3" x42="24.2" y42="53.6" x43="24.2" y43="68.5" x44="24.4" y44="42.4" x45="24.4" y45="63.8" x46="24.4" y46="83.3" x47="24.6" y47="53.6" x48="24.6" y48="68.5" x49="24.8" y49="42.4" x50="24.8" y50="63.8" x51="24.8" y51="83.3" x52="25.0" y52="53.6" x53="25.0" y53="68.5" x54="25.2" y54="42.4" x55="25.2" y55="63.8" x56="25.2" y56="83.3" x57="25.4" y57="53.6" x58="25.4" y58="6
---
Human_Prompt: You are a specialised circuit-diagram interpreter performing zero-shot inference. Given the image of an electrical circuit diagram, identify all symbols of class "gnd". For each symbol from that class, output one <points> tag and nothing else, in the exact format: <points x1="…" y1="…" x2="…" y2="…" alt="gnd">gnd</points> Use the coordinates of the bounding polygon of each symbol. Do not include any additional text or tags.Example: <points x1="20.8" y1="42.4" x2="21.0" y2="53.6" alt="gnd">gnd</points>
===
Model_Response:  <points x1="21.0" y1="53.6" x2="21.0" y2="63.8" x3="21.0" y3="83.3" x4="21.2" y4="42.4" x5="21.2" y5="68.3" x6="21.2" y6="82.1" x7="21.4" y7="62.5" x8="21.4" y8="83.9" x9="21.6" y9="64.6" x10="21.6" y10="81.3" x11="21.6" y11="84.7" x12="21.8" y12="61.6" x13="21.8" y13="66.9" x14="21.8" y14="67.7" x15="21.8" y15="82.8" x16="21.8" y16="85.5" x17="21.9" y17="65.7" x18="22.1" y18="60.7" x19="22.1" y19="63.1" x20="22.1" y20="83.1" x21="22.3" y21="62.0" x22="22.3" y22="64.0" x23="22.3" y23="65.0" x24="22.3" y24="66.2" x25="22.3" y25="67.1" x26="22.3" y26="68.0" x27="22.3" y27="81.6" x28="22.3" y28="82.4" x29="22.5" y29="61.1" x30="22.5" y30="61.4" x31="22.5" y31="63.5" x32="22.5" y32="64.8" x33="22.5" y33="65.4" x34="22.5" y34="66.5" x35="22.5" y35="67.4" x36="22.5" y36="68.6" x37="22.5" y37="83.6" x38="22.7" y38="60.3" x39="22.7" y39="62.8" x40="22.7" y40="63.9" x41="22.7" y41="64.9" x42="22.7" y42="65.9" x43="22.7" y43="67.9" x44="22.7" y44="68.9" x45="22.7" y45="81.0" x46="22.7" y46="82.0" x47="22.7" y47="83.0" x48="22.9" y48="60.6" x49="22.9" y49="61.8" x50="22.9" y50="62.3" x51="22.9" y51="63.0" x52="22.9" y52="63.3" x53="22.9" y53="64.2" x54="22.9" y54="65.1" x55="22.9" y55="66.8" x56="22.9" y56="67.2" x57="23.1" y57="60.0" x58="23.1" y58="6
---
Human_Prompt: You are a specialised circuit-diagram interpreter performing zero-shot inference. Given the image of an electrical circuit diagram, identify all symbols of class "socket". For each symbol from that class, output one <points> tag and nothing else, in the exact format: <points x1="…" y1="…" x2="…" y2="…" alt="socket">socket</points> Use the coordinates of the bounding polygon of each symbol. Do not include any additional text or tags.Example: <points x1="20.8" y1="42.4" x2="21.0" y2="53.6" alt="socket">socket</points>
===
Model_Response: 
 <points x1="21.0" y1="53.6" x2="21.0" y2="63.8" x3="21.0" y3="83.3" x4="21.2" y4="42.4" x5="21.2" y5="68.3" alt="socket">socket</points>
---
